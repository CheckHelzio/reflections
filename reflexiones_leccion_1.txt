COMANDOS DE AYUDA

	// Crear una nueva carpeta
	mkdir <NOMBRE DE LA CARPETA>

	// Abrir nuevo archivo de texto con Sublime Text, si no existe lo crea
	subl <Nombre del archivo que vamos a abrir>

	// Copiar un repositorio de git
	git clone <Url del repositorio que vamos a copiar)

	// Ver la lista de commits de un repositorio
	git log

	// Ver la diferencia entre dos commits con colores verde y rojo
	git config --global color.ui auto

	// Reestablecer el proyecto a un commit
	git checkout <ID del commit>

	// Reestablecer el proyecto al commit mas reciente de esa rama
	git checkout <Nombre de la rama EJ. master>

	// Establecer Sublime Text 3 como el editor de texto de Git
	git config --global core.editor "'C:/Program Files/Sublime Text 3/sublime_text.exe' -n -w"

1.- Ver la diferencia entre dos versiones de un archivo a traves del comando "diff" nos permite
	localizar los cambios de manera mas sencilla, ya que por ejemplo, si tuvieramos un archivo
	con miles de lineas, ver los cambios a simplevista seria una tarea titanica.

	Asi pues, si tras realizar algun cambio aparece un "bug" es mas facil localizar o revertir
	el problema.

2.- Tener disponible en todo momento el historial con los distintos cambios de los archivos
	nos hace más eficientes como programadores ya que a largo plazo habremos ahorrado mucho
	tiempo al encontrar y revertir errores o restablecer los archivos a algun momento especifico.
	
3.- Los cambios en git son guardados manualmente, esto nos permite guardar solo cambios significa
	vos, reduciendo el espacio en la memoria que estos necesitan.

	Por otro lado, al guardar los cambios de manera manual, describimos en pocas palabras el cambio
	que estamos guardando, siento más facil identificarlos.

4.- Git esta pensado para ser utilizado en proyectos en donde unos archivos se relacionan con otros,
	por lo cual es indispensable que al momento de guardar un cambio, se guarde el estado que tenian
	todos los archivos en ese momento.

5.- Para poder utilizar los comandos "git log" y "git diff" es necesario que en la terminal de Git Bash
	nos encontremos dentro de la carpeta en donde se encuentra nuestro repositorio. Para ello podemos
	navegar por las distintas carpetas a traves del comando "CD".

	Una vez en la carpeta del proyecto podemos ejecutar el comando "git log" y ver la lista de commits
	que se han realizado en dicho repositorio.

	Para ejecutar el comando "git diff" es necesario pasar dos argumentos, el primero será el ID de la
	version más vieja que queramos comparar y el segundo la version mas reciendo.

		EJ. git dif 98U12OINU12OIU1N2 0812J01928J09J

6.- El uso de Git nos permite tomar más riesgos, ya que lo que comunmente nos detiene es el trabajo que
	implica restablecer al estado original todos los archivos en caso de que algo salga mal.
	Con git podemos reestablecer esos cambios de manera muy sencilla.

	Otra de las razones el la oportunidad de crear ramas en el proyectos. Con lo cual podemos trabajar
	en una nueva caracteristica sin tocar la version funcional del proyecto. Y si modificamos la version
	base, incorporar estos cambios en la nueva ramificacion.